{"version":3,"file":"blocksonly.js","sources":["webpack:///src/examples/blocks-only.jsx","webpack:///./src/examples/blocks-only.css","webpack:///./src/examples/blocks-only.css?7ce9"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {connect} from 'react-redux';\n\nimport AppStateHOC from '../lib/app-state-hoc.jsx';\nimport Controls from '../containers/controls.jsx';\nimport Blocks from '../containers/blocks.jsx';\nimport GUI from '../containers/gui.jsx';\nimport ProjectLoaderHOC from '../lib/project-loader-hoc.jsx';\n\nimport styles from './blocks-only.css';\n\nconst mapStateToProps = state => ({vm: state.vm});\n\nconst VMBlocks = connect(mapStateToProps)(Blocks);\nconst VMControls = connect(mapStateToProps)(Controls);\n\nconst BlocksOnly = props => (\n    <GUI {...props}>\n        <VMBlocks\n            grow={1}\n            options={{\n                media: `static/blocks-media/`\n            }}\n        />\n        <VMControls className={styles.controls} />\n    </GUI>\n);\n\nconst App = AppStateHOC(ProjectLoaderHOC(BlocksOnly));\n\nconst appTarget = document.createElement('div');\ndocument.body.appendChild(appTarget);\n\nReactDOM.render(<App />, appTarget);\n\n\n\n// WEBPACK FOOTER //\n// src/examples/blocks-only.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--1-1!../../node_modules/postcss-loader/lib/index.js??postcss!./blocks-only.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js??ref--1-1!../../node_modules/postcss-loader/lib/index.js??postcss!./blocks-only.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js??ref--1-1!../../node_modules/postcss-loader/lib/index.js??postcss!./blocks-only.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/examples/blocks-only.css\n// module id = 459\n// module chunks = 2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".blocks-only_controls_1gHLl {\\n    position: absolute;\\n    z-index: 2;\\n    top: 10px;\\n    right: 15px;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"controls\": \"blocks-only_controls_1gHLl\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"modules\":true,\"importLoaders\":1,\"localIdentName\":\"[name]_[local]_[hash:base64:5]\",\"camelCase\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\"}!./src/examples/blocks-only.css\n// module id = 460\n// module chunks = 2"],"mappings":";;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAPA;AADA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}